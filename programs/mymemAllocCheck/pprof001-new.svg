<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.36.0 (20140111.2315)
 -->
<!-- Title: mymemAllocCheck.test Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/** 
 *  SVGPan library 1.2.1
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the first g 
 * element), including the the library into any SVG adds the following capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 * 
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION 
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)

/// <====
/// END OF CONFIGURATION 

var root = document.documentElement;

var state = 'none', svgRoot, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(typeof(svgRoot) == "undefined") {
		var g = null;

		g = root.getElementById("viewport");

		if(g == null)
			g = root.getElementsByTagName('g')[0];

		if(g == null)
			alert('Unable to obtain SVG root element');

		setCTM(g, g.getCTM());

		g.removeAttribute("viewBox");

		svgRoot = g;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 3600; // Chrome/Safari
	else
		delta = evt.detail / -90; // Mozilla

	var z = 1 + delta; // Zoom factor: 0.9/1.1

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg" 
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element 
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}

]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1426)">
<title>mymemAllocCheck.test</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1426 877,-1426 877,4 -4,4"/>
<g id="clust1" class="cluster"><title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-1284 8,-1414 426,-1414 426,-1284 8,-1284"/>
</g>
<!-- L -->
<g id="node1" class="node"><title>L</title>
<polygon fill="#f8f8f8" stroke="black" points="418,-1405.5 16,-1405.5 16,-1292.5 418,-1292.5 418,-1405.5"/>
<text text-anchor="start" x="24" y="-1375.9" font-family="Times,serif" font-size="32.00">File: mymemAllocCheck.test</text>
<text text-anchor="start" x="24" y="-1340.9" font-family="Times,serif" font-size="32.00">Type: alloc_objects</text>
<text text-anchor="start" x="24" y="-1305.9" font-family="Times,serif" font-size="32.00">66049 of 66049 total ( &#160;100%)</text>
</g>
<!-- N1 -->
<g id="node2" class="node"><title>N1</title>
<g id="a_node2"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.popJstruct (66049)">
<polygon fill="#f8f8f8" stroke="black" points="873,-888 73,-888 73,-802 873,-802 873,-888"/>
<text text-anchor="middle" x="473" y="-864.8" font-family="Times,serif" font-size="24.00">github.com/rravishankar/golangtraining/programs/mymemAllocCheck.popJstruct</text>
<text text-anchor="middle" x="473" y="-838.8" font-family="Times,serif" font-size="24.00">33281(50.39%)</text>
<text text-anchor="middle" x="473" y="-812.8" font-family="Times,serif" font-size="24.00">of 66049(100%)</text>
</a>
</g>
</g>
<!-- NN1_0 -->
<g id="node3" class="node"><title>NN1_0</title>
<g id="a_node3"><a xlink:title="32769">
<polygon fill="#f8f8f8" stroke="black" points="428,-750 378,-750 374,-746 374,-714 424,-714 428,-718 428,-750"/>
<polyline fill="none" stroke="black" points="424,-746 374,-746 "/>
<polyline fill="none" stroke="black" points="424,-746 424,-714 "/>
<polyline fill="none" stroke="black" points="424,-746 428,-750 "/>
<text text-anchor="middle" x="401" y="-730.1" font-family="Times,serif" font-size="8.00">32B</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;NN1_0 -->
<g id="edge1" class="edge"><title>N1&#45;&gt;NN1_0</title>
<g id="a_edge1"><a xlink:title=" 32769">
<path fill="none" stroke="black" d="M442.976,-801.999C438.876,-796.008 434.781,-789.883 431,-784 425.835,-775.963 420.463,-767.035 415.717,-758.924"/>
<polygon fill="black" stroke="black" points="418.708,-757.104 410.668,-750.204 412.65,-760.612 418.708,-757.104"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title=" 32769">
<text text-anchor="middle" x="450" y="-772.3" font-family="Times,serif" font-size="14.00"> 32769</text>
</a>
</g>
</g>
<!-- NN1_1 -->
<g id="node4" class="node"><title>NN1_1</title>
<g id="a_node4"><a xlink:title="512">
<polygon fill="#f8f8f8" stroke="black" points="500,-750 450,-750 446,-746 446,-714 496,-714 500,-718 500,-750"/>
<polyline fill="none" stroke="black" points="496,-746 446,-746 "/>
<polyline fill="none" stroke="black" points="496,-746 496,-714 "/>
<polyline fill="none" stroke="black" points="496,-746 500,-750 "/>
<text text-anchor="middle" x="473" y="-730.1" font-family="Times,serif" font-size="8.00">1kB</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;NN1_1 -->
<g id="edge2" class="edge"><title>N1&#45;&gt;NN1_1</title>
<g id="a_edge2"><a xlink:title=" 512">
<path fill="none" stroke="black" d="M473,-801.719C473,-787.882 473,-772.882 473,-760.436"/>
<polygon fill="black" stroke="black" points="476.5,-760.25 473,-750.25 469.5,-760.251 476.5,-760.25"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title=" 512">
<text text-anchor="middle" x="485.5" y="-772.3" font-family="Times,serif" font-size="14.00"> 512</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node11" class="node"><title>N7</title>
<g id="a_node11"><a xlink:title="fmt.Printf (32768)">
<polygon fill="#f8f8f8" stroke="black" points="576,-676 496,-676 496,-640 576,-640 576,-676"/>
<text text-anchor="middle" x="536" y="-660.6" font-family="Times,serif" font-size="8.00">fmt.Printf</text>
<text text-anchor="middle" x="536" y="-651.6" font-family="Times,serif" font-size="8.00">0 of 32768(49.61%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N7 -->
<g id="edge14" class="edge"><title>N1&#45;&gt;N7</title>
<g id="a_edge14"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.popJstruct &#45;&gt; fmt.Printf (32768)">
<path fill="none" stroke="black" stroke-width="3" d="M494.585,-801.813C497.256,-795.904 499.811,-789.852 502,-784 514.325,-751.045 524.284,-711.686 530.166,-686.058"/>
<polygon fill="black" stroke="black" stroke-width="3" points="533.581,-686.823 532.36,-676.299 526.751,-685.287 533.581,-686.823"/>
</a>
</g>
<g id="a_edge14&#45;label"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.popJstruct &#45;&gt; fmt.Printf (32768)">
<text text-anchor="middle" x="543" y="-728.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node5" class="node"><title>N2</title>
<g id="a_node5"><a xlink:title="reflect.(*structType).Field (32768)">
<polygon fill="#f8f8f8" stroke="black" points="671.25,-148 400.75,-148 400.75,-88 671.25,-88 671.25,-148"/>
<text text-anchor="middle" x="536" y="-124.8" font-family="Times,serif" font-size="24.00">reflect.(*structType).Field</text>
<text text-anchor="middle" x="536" y="-98.8" font-family="Times,serif" font-size="24.00">32768(49.61%)</text>
</a>
</g>
</g>
<!-- NN2_0 -->
<g id="node6" class="node"><title>NN2_0</title>
<g id="a_node6"><a xlink:title="32768">
<polygon fill="#f8f8f8" stroke="black" points="563,-36 513,-36 509,-32 509,-0 559,-0 563,-4 563,-36"/>
<polyline fill="none" stroke="black" points="559,-32 509,-32 "/>
<polyline fill="none" stroke="black" points="559,-32 559,-0 "/>
<polyline fill="none" stroke="black" points="559,-32 563,-36 "/>
<text text-anchor="middle" x="536" y="-16.1" font-family="Times,serif" font-size="8.00">16B</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;NN2_0 -->
<g id="edge3" class="edge"><title>N2&#45;&gt;NN2_0</title>
<g id="a_edge3"><a xlink:title=" 32768">
<path fill="none" stroke="black" d="M536,-87.8621C536,-74.7265 536,-59.2986 536,-46.379"/>
<polygon fill="black" stroke="black" points="539.5,-46.2219 536,-36.2219 532.5,-46.222 539.5,-46.2219"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title=" 32768">
<text text-anchor="middle" x="555" y="-58.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node7" class="node"><title>N3</title>
<g id="a_node7"><a xlink:title="fmt.(*pp).doPrintf (32768)">
<polygon fill="#f8f8f8" stroke="black" points="576,-500 496,-500 496,-464 576,-464 576,-500"/>
<text text-anchor="middle" x="536" y="-484.6" font-family="Times,serif" font-size="8.00">fmt.(*pp).doPrintf</text>
<text text-anchor="middle" x="536" y="-475.6" font-family="Times,serif" font-size="8.00">0 of 32768(49.61%)</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node8" class="node"><title>N4</title>
<g id="a_node8"><a xlink:title="fmt.(*pp).printArg (32768)">
<polygon fill="#f8f8f8" stroke="black" points="576,-412 496,-412 496,-376 576,-376 576,-412"/>
<text text-anchor="middle" x="536" y="-396.6" font-family="Times,serif" font-size="8.00">fmt.(*pp).printArg</text>
<text text-anchor="middle" x="536" y="-387.6" font-family="Times,serif" font-size="8.00">0 of 32768(49.61%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N4 -->
<g id="edge9" class="edge"><title>N3&#45;&gt;N4</title>
<g id="a_edge9"><a xlink:title="fmt.(*pp).doPrintf &#45;&gt; fmt.(*pp).printArg (32768)">
<path fill="none" stroke="black" stroke-width="3" d="M536,-463.597C536,-451.746 536,-435.817 536,-422.292"/>
<polygon fill="black" stroke="black" stroke-width="3" points="539.5,-422.084 536,-412.084 532.5,-422.084 539.5,-422.084"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="fmt.(*pp).doPrintf &#45;&gt; fmt.(*pp).printArg (32768)">
<text text-anchor="middle" x="555" y="-434.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node9" class="node"><title>N5</title>
<g id="a_node9"><a xlink:title="fmt.(*pp).printValue (32768)">
<polygon fill="#f8f8f8" stroke="black" points="577.5,-324 494.5,-324 494.5,-288 577.5,-288 577.5,-324"/>
<text text-anchor="middle" x="536" y="-308.6" font-family="Times,serif" font-size="8.00">fmt.(*pp).printValue</text>
<text text-anchor="middle" x="536" y="-299.6" font-family="Times,serif" font-size="8.00">0 of 32768(49.61%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N5 -->
<g id="edge10" class="edge"><title>N4&#45;&gt;N5</title>
<g id="a_edge10"><a xlink:title="fmt.(*pp).printArg &#45;&gt; fmt.(*pp).printValue (32768)">
<path fill="none" stroke="black" stroke-width="3" d="M536,-375.597C536,-363.746 536,-347.817 536,-334.292"/>
<polygon fill="black" stroke="black" stroke-width="3" points="539.5,-334.084 536,-324.084 532.5,-334.084 539.5,-334.084"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="fmt.(*pp).printArg &#45;&gt; fmt.(*pp).printValue (32768)">
<text text-anchor="middle" x="555" y="-346.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node14" class="node"><title>N10</title>
<g id="a_node14"><a xlink:title="reflect.(*rtype).Field (32768)">
<polygon fill="#f8f8f8" stroke="black" points="579,-236 493,-236 493,-200 579,-200 579,-236"/>
<text text-anchor="middle" x="536" y="-220.6" font-family="Times,serif" font-size="8.00">reflect.(*rtype).Field</text>
<text text-anchor="middle" x="536" y="-211.6" font-family="Times,serif" font-size="8.00">0 of 32768(49.61%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N10 -->
<g id="edge11" class="edge"><title>N5&#45;&gt;N10</title>
<g id="a_edge11"><a xlink:title="fmt.(*pp).printValue &#45;&gt; reflect.(*rtype).Field (32768)">
<path fill="none" stroke="black" stroke-width="3" d="M536,-287.597C536,-275.746 536,-259.817 536,-246.292"/>
<polygon fill="black" stroke="black" stroke-width="3" points="539.5,-246.084 536,-236.084 532.5,-246.084 539.5,-246.084"/>
</a>
</g>
<g id="a_edge11&#45;label"><a xlink:title="fmt.(*pp).printValue &#45;&gt; reflect.(*rtype).Field (32768)">
<text text-anchor="middle" x="555" y="-258.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node10" class="node"><title>N6</title>
<g id="a_node10"><a xlink:title="fmt.Fprintf (32768)">
<polygon fill="#f8f8f8" stroke="black" points="576,-588 496,-588 496,-552 576,-552 576,-588"/>
<text text-anchor="middle" x="536" y="-572.6" font-family="Times,serif" font-size="8.00">fmt.Fprintf</text>
<text text-anchor="middle" x="536" y="-563.6" font-family="Times,serif" font-size="8.00">0 of 32768(49.61%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N3 -->
<g id="edge12" class="edge"><title>N6&#45;&gt;N3</title>
<g id="a_edge12"><a xlink:title="fmt.Fprintf &#45;&gt; fmt.(*pp).doPrintf (32768)">
<path fill="none" stroke="black" stroke-width="3" d="M536,-551.597C536,-539.746 536,-523.817 536,-510.292"/>
<polygon fill="black" stroke="black" stroke-width="3" points="539.5,-510.084 536,-500.084 532.5,-510.084 539.5,-510.084"/>
</a>
</g>
<g id="a_edge12&#45;label"><a xlink:title="fmt.Fprintf &#45;&gt; fmt.(*pp).doPrintf (32768)">
<text text-anchor="middle" x="555" y="-522.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N6 -->
<g id="edge13" class="edge"><title>N7&#45;&gt;N6</title>
<g id="a_edge13"><a xlink:title="fmt.Printf &#45;&gt; fmt.Fprintf (32768)">
<path fill="none" stroke="black" stroke-width="3" d="M536,-639.597C536,-627.746 536,-611.817 536,-598.292"/>
<polygon fill="black" stroke="black" stroke-width="3" points="539.5,-598.084 536,-588.084 532.5,-598.084 539.5,-598.084"/>
</a>
</g>
<g id="a_edge13&#45;label"><a xlink:title="fmt.Printf &#45;&gt; fmt.Fprintf (32768)">
<text text-anchor="middle" x="555" y="-610.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node12" class="node"><title>N8</title>
<g id="a_node12"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.BenchmarkAlgorithmOne (66049)">
<polygon fill="#f8f8f8" stroke="black" points="636,-1064 310,-1064 310,-1028 636,-1028 636,-1064"/>
<text text-anchor="middle" x="473" y="-1048.6" font-family="Times,serif" font-size="8.00">github.com/rravishankar/golangtraining/programs/mymemAllocCheck.BenchmarkAlgorithmOne</text>
<text text-anchor="middle" x="473" y="-1039.6" font-family="Times,serif" font-size="8.00">0 of 66049(100%)</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node13" class="node"><title>N9</title>
<g id="a_node13"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.algOne (66049)">
<polygon fill="#f8f8f8" stroke="black" points="606,-976 340,-976 340,-940 606,-940 606,-976"/>
<text text-anchor="middle" x="473" y="-960.6" font-family="Times,serif" font-size="8.00">github.com/rravishankar/golangtraining/programs/mymemAllocCheck.algOne</text>
<text text-anchor="middle" x="473" y="-951.6" font-family="Times,serif" font-size="8.00">0 of 66049(100%)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N9 -->
<g id="edge4" class="edge"><title>N8&#45;&gt;N9</title>
<g id="a_edge4"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.BenchmarkAlgorithmOne &#45;&gt; github.com/rravishankar/golangtraining/programs/mymemAllocCheck.algOne (66049)">
<path fill="none" stroke="black" stroke-width="6" d="M473,-1027.6C473,-1015.75 473,-999.817 473,-986.292"/>
<polygon fill="black" stroke="black" stroke-width="6" points="478.25,-986.084 473,-976.084 467.75,-986.084 478.25,-986.084"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.BenchmarkAlgorithmOne &#45;&gt; github.com/rravishankar/golangtraining/programs/mymemAllocCheck.algOne (66049)">
<text text-anchor="middle" x="492" y="-998.3" font-family="Times,serif" font-size="14.00"> 66049</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N1 -->
<g id="edge5" class="edge"><title>N9&#45;&gt;N1</title>
<g id="a_edge5"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.algOne &#45;&gt; github.com/rravishankar/golangtraining/programs/mymemAllocCheck.popJstruct (66049)">
<path fill="none" stroke="black" stroke-width="6" d="M473,-939.656C473,-928.46 473,-913.248 473,-898.341"/>
<polygon fill="black" stroke="black" stroke-width="6" points="478.25,-898.123 473,-888.123 467.75,-898.123 478.25,-898.123"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="github.com/rravishankar/golangtraining/programs/mymemAllocCheck.algOne &#45;&gt; github.com/rravishankar/golangtraining/programs/mymemAllocCheck.popJstruct (66049)">
<text text-anchor="middle" x="492" y="-910.3" font-family="Times,serif" font-size="14.00"> 66049</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N2 -->
<g id="edge15" class="edge"><title>N10&#45;&gt;N2</title>
<g id="a_edge15"><a xlink:title="reflect.(*rtype).Field &#45;&gt; reflect.(*structType).Field (32768)">
<path fill="none" stroke="black" stroke-width="3" d="M536,-199.93C536,-188.456 536,-172.846 536,-158.396"/>
<polygon fill="black" stroke="black" stroke-width="3" points="539.5,-158.154 536,-148.154 532.5,-158.154 539.5,-158.154"/>
</a>
</g>
<g id="a_edge15&#45;label"><a xlink:title="reflect.(*rtype).Field &#45;&gt; reflect.(*structType).Field (32768)">
<text text-anchor="middle" x="555" y="-170.3" font-family="Times,serif" font-size="14.00"> 32768</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node15" class="node"><title>N11</title>
<g id="a_node15"><a xlink:title="runtime.goexit (66049)">
<polygon fill="#f8f8f8" stroke="black" points="510,-1367 436,-1367 436,-1331 510,-1331 510,-1367"/>
<text text-anchor="middle" x="473" y="-1351.6" font-family="Times,serif" font-size="8.00">runtime.goexit</text>
<text text-anchor="middle" x="473" y="-1342.6" font-family="Times,serif" font-size="8.00">0 of 66049(100%)</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node16" class="node"><title>N12</title>
<g id="a_node16"><a xlink:title="testing.(*B).launch (66049)">
<polygon fill="#f8f8f8" stroke="black" points="512,-1240 434,-1240 434,-1204 512,-1204 512,-1240"/>
<text text-anchor="middle" x="473" y="-1224.6" font-family="Times,serif" font-size="8.00">testing.(*B).launch</text>
<text text-anchor="middle" x="473" y="-1215.6" font-family="Times,serif" font-size="8.00">0 of 66049(100%)</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N12 -->
<g id="edge6" class="edge"><title>N11&#45;&gt;N12</title>
<g id="a_edge6"><a xlink:title="runtime.goexit &#45;&gt; testing.(*B).launch (66049)">
<path fill="none" stroke="black" stroke-width="6" d="M473,-1330.88C473,-1310.15 473,-1274.95 473,-1250.42"/>
<polygon fill="black" stroke="black" stroke-width="6" points="478.25,-1250.31 473,-1240.31 467.75,-1250.31 478.25,-1250.31"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="runtime.goexit &#45;&gt; testing.(*B).launch (66049)">
<text text-anchor="middle" x="492" y="-1262.3" font-family="Times,serif" font-size="14.00"> 66049</text>
</a>
</g>
</g>
<!-- N13 -->
<g id="node17" class="node"><title>N13</title>
<g id="a_node17"><a xlink:title="testing.(*B).runN (66049)">
<polygon fill="#f8f8f8" stroke="black" points="510,-1152 436,-1152 436,-1116 510,-1116 510,-1152"/>
<text text-anchor="middle" x="473" y="-1136.6" font-family="Times,serif" font-size="8.00">testing.(*B).runN</text>
<text text-anchor="middle" x="473" y="-1127.6" font-family="Times,serif" font-size="8.00">0 of 66049(100%)</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N13 -->
<g id="edge7" class="edge"><title>N12&#45;&gt;N13</title>
<g id="a_edge7"><a xlink:title="testing.(*B).launch &#45;&gt; testing.(*B).runN (66049)">
<path fill="none" stroke="black" stroke-width="6" d="M473,-1203.6C473,-1191.75 473,-1175.82 473,-1162.29"/>
<polygon fill="black" stroke="black" stroke-width="6" points="478.25,-1162.08 473,-1152.08 467.75,-1162.08 478.25,-1162.08"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="testing.(*B).launch &#45;&gt; testing.(*B).runN (66049)">
<text text-anchor="middle" x="492" y="-1174.3" font-family="Times,serif" font-size="14.00"> 66049</text>
</a>
</g>
</g>
<!-- N13&#45;&gt;N8 -->
<g id="edge8" class="edge"><title>N13&#45;&gt;N8</title>
<g id="a_edge8"><a xlink:title="testing.(*B).runN &#45;&gt; github.com/rravishankar/golangtraining/programs/mymemAllocCheck.BenchmarkAlgorithmOne (66049)">
<path fill="none" stroke="black" stroke-width="6" d="M473,-1115.6C473,-1103.75 473,-1087.82 473,-1074.29"/>
<polygon fill="black" stroke="black" stroke-width="6" points="478.25,-1074.08 473,-1064.08 467.75,-1074.08 478.25,-1074.08"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="testing.(*B).runN &#45;&gt; github.com/rravishankar/golangtraining/programs/mymemAllocCheck.BenchmarkAlgorithmOne (66049)">
<text text-anchor="middle" x="492" y="-1086.3" font-family="Times,serif" font-size="14.00"> 66049</text>
</a>
</g>
</g>
</g>
</g></svg>
